---

# kibana_plugins_reinstall will be set to true if kibana_install.changed
# i.e. we have changed Kibana version(or we have clean installation of Kibana),
# or if no plugins listed. Otherwise it is false and requires explicitly
# setting.
- name: set fact kibana_plugins_reinstall to true
  set_fact: kibana_plugins_reinstall=true
  when: ((kibana_install is defined and kibana_install.changed) or
        kibana_plugins is not defined or
        kibana_plugins is none)

# List currently installed plugins. We have to list the directories as the list
# commmand fails if the Kibana version is different than the plugin version.
- name: Check installed kibana plugins
  become: true
  command: "ls {{kibana_home}}/plugins"
  register: installed_plugins
  changed_when: false
  ignore_errors: true

# if kibana_plugins_reinstall is set to true we remove ALL plugins
- name: set fact plugins_to_remove to install_plugins.stdout_lines
  set_fact:
    plugins_to_remove: "{{ installed_plugins.stdout_lines | default([]) }}"
  when: kibana_plugins_reinstall

# if the plugins listed are different than those requested, we remove those
# installed but not listed in the config
- name: set fact plugins_to_remove to delete plugins installed but not listed in kibana_plugins
  set_fact:
    plugins_to_remove: "{{
      installed_plugins.stdout_lines |
      difference(
        kibana_plugins |
        json_query('[*].plugin')
      ) |
      default([])
    }}"
  when: not kibana_plugins_reinstall

# if kibana_plugins_reinstall is set to true we (re)install ALL plugins
- name: set fact plugins_to_install to kibana_plugins
  set_fact:
    plugins_to_install: "{{
      kibana_plugins |
      json_query('[*].plugin') |
      default([])
    }}"
  when: kibana_plugins_reinstall

# if the plugins listed are different than those requested, we install those
# not installed but listed in the config
- name: set fact to plugins_to_install to those requested but not installed
  set_fact:
    plugins_to_install: "{{
      kibana_plugins |
      json_query('[*].plugin') |
      difference(installed_plugins.stdout_lines) |
      default([])
    }}"
  when: not kibana_plugins_reinstall

# This removes any currently installed plugins (to prevent errors when
# reinstalling)
- name: Remove kibana plugins
  become: true
  command: "{{kibana_home}}/bin/kibana-plugin remove {{item}} --silent"
  with_items: "{{ plugins_to_remove }}"
  notify: restart kibana
  when: plugins_to_remove

- name: Install kibana plugins
  become: true
  command: "{{kibana_home}}/bin/kibana-plugin install {{ item.url | default(item.plugin) }} --silent"
  register: plugin_installed
  changed_when: plugin_installed.rc == 0
  with_items: "{{ kibana_plugins }}"
  when: item.plugin in plugins_to_install
  notify: restart kibana
  until: plugin_installed.rc == 0
  retries: 5
  delay: 5

# Set permissions on plugins directory
- name: Set Plugin Directory Permissions
  become: true
  file:
    state: directory
    path: "{{ kibana_home }}/plugins"
    owner: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    recurse: true
